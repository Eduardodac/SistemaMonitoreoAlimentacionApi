// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SistemaMonitoreoAlimentacionApi;

#nullable disable

namespace SistemaMonitoreoAlimentacionApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240428191423_gatoModification")]
    partial class gatoModification
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SistemaMonitoreoAlimentacionApi.Entidades.ActividadFelina", b =>
                {
                    b.Property<Guid>("ActividadFelinaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("AlimentoConsumido")
                        .HasColumnType("float");

                    b.Property<int>("Aproximaciones")
                        .HasColumnType("int");

                    b.Property<int>("AproximacionesSinConsumo")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("GatoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ActividadFelinaId");

                    b.HasIndex("GatoId");

                    b.ToTable("ActividadesFelinas");
                });

            modelBuilder.Entity("SistemaMonitoreoAlimentacionApi.Entidades.Aviso", b =>
                {
                    b.Property<Guid>("AvisoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AlimentoDisponible")
                        .HasColumnType("int");

                    b.Property<DateTime>("Caducidad")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LimpiarContenedor")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LimpiarPlato")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AvisoId");

                    b.ToTable("Avisos");
                });

            modelBuilder.Entity("SistemaMonitoreoAlimentacionApi.Entidades.Collar", b =>
                {
                    b.Property<Guid>("CollarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("EstatusActivacion")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaActivacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaSalida")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("NumeroRegistro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CollarId");

                    b.ToTable("Collares");
                });

            modelBuilder.Entity("SistemaMonitoreoAlimentacionApi.Entidades.DiadelaSemana", b =>
                {
                    b.Property<int>("DiadelaSemanaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DiadelaSemanaId"), 1L, 1);

                    b.Property<string>("Dia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DiadelaSemanaId");

                    b.ToTable("DiadelaSemana");
                });

            modelBuilder.Entity("SistemaMonitoreoAlimentacionApi.Entidades.Dosificador", b =>
                {
                    b.Property<Guid>("DosificadorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("EstatusActivacion")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaActivacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaSalida")
                        .HasColumnType("datetime2");

                    b.Property<string>("NumeroRegistro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DosificadorId");

                    b.ToTable("Dosificadores");
                });

            modelBuilder.Entity("SistemaMonitoreoAlimentacionApi.Entidades.Gato", b =>
                {
                    b.Property<Guid>("GatoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CollarId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Edad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagenGato")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Raza")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sexo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GatoId");

                    b.HasIndex("CollarId")
                        .IsUnique()
                        .HasFilter("[CollarId] IS NOT NULL");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Gatos");
                });

            modelBuilder.Entity("SistemaMonitoreoAlimentacionApi.Entidades.Horario", b =>
                {
                    b.Property<Guid>("HorarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DiaDeLaSemanaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Hora")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("HorarioId");

                    b.HasIndex("DiaDeLaSemanaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Horarios");
                });

            modelBuilder.Entity("SistemaMonitoreoAlimentacionApi.Entidades.Registro", b =>
                {
                    b.Property<Guid>("RegistroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CollarId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Consumo")
                        .HasColumnType("float");

                    b.Property<Guid>("DosificadorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Duracion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Hora")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IntegradoAAnalisis")
                        .HasColumnType("bit");

                    b.HasKey("RegistroId");

                    b.HasIndex("CollarId");

                    b.HasIndex("DosificadorId");

                    b.ToTable("Registros");
                });

            modelBuilder.Entity("SistemaMonitoreoAlimentacionApi.Entidades.Usuario", b =>
                {
                    b.Property<Guid>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ApellidoMaterno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApellidoPaterno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DosificadorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImagenUsuario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioCorreo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UsuarioId");

                    b.HasIndex("DosificadorId")
                        .IsUnique()
                        .HasFilter("[DosificadorId] IS NOT NULL");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("SistemaMonitoreoAlimentacionApi.Entidades.ActividadFelina", b =>
                {
                    b.HasOne("SistemaMonitoreoAlimentacionApi.Entidades.Gato", "Gato")
                        .WithMany()
                        .HasForeignKey("GatoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gato");
                });

            modelBuilder.Entity("SistemaMonitoreoAlimentacionApi.Entidades.Aviso", b =>
                {
                    b.HasOne("SistemaMonitoreoAlimentacionApi.Entidades.Usuario", "Usuario")
                        .WithOne("Aviso")
                        .HasForeignKey("SistemaMonitoreoAlimentacionApi.Entidades.Aviso", "AvisoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SistemaMonitoreoAlimentacionApi.Entidades.Gato", b =>
                {
                    b.HasOne("SistemaMonitoreoAlimentacionApi.Entidades.Collar", "Collar")
                        .WithOne("Gato")
                        .HasForeignKey("SistemaMonitoreoAlimentacionApi.Entidades.Gato", "CollarId");

                    b.HasOne("SistemaMonitoreoAlimentacionApi.Entidades.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Collar");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SistemaMonitoreoAlimentacionApi.Entidades.Horario", b =>
                {
                    b.HasOne("SistemaMonitoreoAlimentacionApi.Entidades.DiadelaSemana", "DiadelaSemana")
                        .WithMany()
                        .HasForeignKey("DiaDeLaSemanaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaMonitoreoAlimentacionApi.Entidades.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DiadelaSemana");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SistemaMonitoreoAlimentacionApi.Entidades.Registro", b =>
                {
                    b.HasOne("SistemaMonitoreoAlimentacionApi.Entidades.Collar", "Collar")
                        .WithMany()
                        .HasForeignKey("CollarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaMonitoreoAlimentacionApi.Entidades.Dosificador", "Dosificador")
                        .WithMany()
                        .HasForeignKey("DosificadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Collar");

                    b.Navigation("Dosificador");
                });

            modelBuilder.Entity("SistemaMonitoreoAlimentacionApi.Entidades.Usuario", b =>
                {
                    b.HasOne("SistemaMonitoreoAlimentacionApi.Entidades.Dosificador", "Dosificador")
                        .WithOne("Usuario")
                        .HasForeignKey("SistemaMonitoreoAlimentacionApi.Entidades.Usuario", "DosificadorId");

                    b.Navigation("Dosificador");
                });

            modelBuilder.Entity("SistemaMonitoreoAlimentacionApi.Entidades.Collar", b =>
                {
                    b.Navigation("Gato");
                });

            modelBuilder.Entity("SistemaMonitoreoAlimentacionApi.Entidades.Dosificador", b =>
                {
                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SistemaMonitoreoAlimentacionApi.Entidades.Usuario", b =>
                {
                    b.Navigation("Aviso");
                });
#pragma warning restore 612, 618
        }
    }
}
